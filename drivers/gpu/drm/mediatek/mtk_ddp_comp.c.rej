--- drivers/gpu/drm/mediatek/mtk_ddp_comp.c
+++ drivers/gpu/drm/mediatek/mtk_ddp_comp.c
@@ -511,24 +511,20 @@ static unsigned int mtk_ddp_comp_find_in_route(struct device *dev,
 					       unsigned int num_routes,
 					       struct mtk_ddp_comp *ddp_comp)
 {
-	int ret;
-	unsigned int i;
+	int i;
 
-	if (!routes) {
-		ret = -EINVAL;
-		goto err;
-	}
+	if (!routes || !num_routes) {
+		DRM_ERROR("No connection routes specified!\n");
+		return -EINVAL;
+ 	}
 
 	for (i = 0; i < num_routes; i++)
 		if (dev == ddp_comp[routes[i].route_ddp].dev)
 			return BIT(routes[i].crtc_id);
 
-	ret = -ENODEV;
-err:
+	DRM_ERROR("Failed to find component in ddp table\n");
 
-	DRM_INFO("Failed to find comp in ddp table, ret = %d\n", ret);
-
-	return 0;
+	return -ENODEV;
 }
 
 int mtk_ddp_comp_get_id(struct device_node *node,
@@ -555,22 +551,25 @@ unsigned int mtk_find_possible_crtcs(struct drm_device *drm, struct device *dev)
 			      private->data->main_path,
 			      private->data->main_len,
 			      private->ddp_comp))
-		ret = BIT(0);
+		return BIT(0);
 	else if (mtk_ddp_comp_find(dev,
 				   private->data->ext_path,
 				   private->data->ext_len,
 				   private->ddp_comp))
-		ret = BIT(1);
+		return BIT(1);
 	else if (mtk_ddp_comp_find(dev,
 				   private->data->third_path,
 				   private->data->third_len,
 				   private->ddp_comp))
-		ret = BIT(2);
-	else
-		ret = mtk_ddp_comp_find_in_route(dev,
-						 private->data->conn_routes,
-						 private->data->num_conn_routes,
-						 private->ddp_comp);
+		return BIT(2);
+
+	ret = mtk_ddp_comp_find_in_route(dev,
+					 private->data->conn_routes,
+					 private->data->num_conn_routes,
+					 private->ddp_comp);
+	/* No CRTC is available: return a zero mask */
+	if (ret < 0)
+		return 0;
 
 	return ret;
 }
