#!/usr/bin/make -f
#
# $(DEBIAN)/rules for Ubuntu linux
#
# Use this however you want, just give credit where credit is due.
#
# Copyright (c) 2007 Ben Collins <bcollins@ubuntu.com>
#

DEBIAN=$(shell awk -F= '($$1 == "DEBIAN") { print $$2 }' <debian/debian.env)

### Make sure this is ARM only

# dpkg-buildpackage passes options that are incomptatible
# with the kernel build.
unexport CFLAGS
unexport LDFLAGS

export LC_ALL=C
export SHELL=/bin/bash -e

# Where do we find the common configuration.
export DROOT=debian

# Common variables for all architectures
include $(DROOT)/rules.d/0-common-vars.mk

# Pull in some arch specific stuff
-include $(DEBIAN)/rules.d/$(arch).mk

# Pull in some branch specific stuff. Used by LTS backport
# branches to override master branch settings such as do_tools_common.
-include $(DEBIAN)/rules.d/hooks.mk

# Maintainer targets
include $(DROOT)/rules.d/1-maintainer.mk

# do_libc_dev_package=false
# do_flavour_image_package=false

do_linux_tools=$(sort $(filter-out false,$(do_tools_usbip) $(do_tools_cpupower) $(do_tools_perf) $(do_tools_bpftool) $(do_tools_x86)))
do_cloud_tools=$(sort $(filter-out false,$(do_tools_hyperv)))
do_tools_common?=true
do_tools_host?=false
do_tools_perf_jvmti?=false
do_enforce_all?=false

# Never signed
bin_pkg_name=$(bin_pkg_name_unsigned)

# This is a mainline build -- turn off things which do not work
o_dtbs=true
do_extras_package=false
do_tools=false
no_dumpfile=1
do_zfs=false
skipabi=true
skipmodule=true
skipretpoline=true

# no tools
do_linux_tools=
do_cloud_tools=
do_tools_common=
do_tools_host=

# Debian Build System targets
binary: binary-indep binary-arch

build: build-arch build-indep

clean: debian/control
	dh_testdir
	dh_testroot
	dh_clean

	# normal build junk
	rm -rf $(DEBIAN)/abi/$(release)-$(revision)
	rm -rf $(builddir)
	rm -f $(stampdir)/stamp-*
	rm -rf $(DEBIAN)/linux-*

	cp $(DEBIAN)/changelog debian/changelog

	# Install the copyright information.
	cp $(DEBIAN)/copyright debian/copyright


	# Install the retpoline extractor.
	cp $(DROOT)/scripts/retpoline-extract-one scripts/ubuntu-retpoline-extract-one

	# If we have a reconstruct script use it.
	[ -f $(DEBIAN)/reconstruct ] && bash $(DEBIAN)/reconstruct || true

	# Remove generated intermediate files
	rm -f $(DROOT)/control.stub $(DEBIAN)/control.stub
	rm -f $(DROOT)/scripts/fix-filenames

distclean: clean
	rm -rf $(DROOT)/control debian/changelog \
		debian/control debian/control.stub debian/copyright \
		scripts/ubuntu-retpoline-extract-one

# Builds the image, arch headers and debug packages
include $(DROOT)/rules.d/2-binary-arch.mk

# Builds the source, doc and linux-headers indep packages
include $(DROOT)/rules.d/3-binary-indep.mk

# Various checks to be performed on builds
include $(DROOT)/rules.d/4-checks.mk

control_files := $(DEBIAN)/control.stub.in
ifeq ($(do_libc_dev_package),true)
ifneq (,$(wildcard $(DEBIAN)/control.d/linux-libc-dev.stub))
	control_files += $(DEBIAN)/control.d/linux-libc-dev.stub
endif
endif
ifeq ($(do_doc_package),true)
ifneq (,$(wildcard $(DEBIAN)/control.d/linux-doc.stub))
	control_files += $(DEBIAN)/control.d/linux-doc.stub
endif
endif

# Misc stuff
.PHONY: $(DEBIAN)/control.stub
$(DEBIAN)/control.stub: 				\
		$(DROOT)/scripts/control-create		\
		$(control_files)			\
		$(DEBIAN)/changelog			\
		$(wildcard $(DEBIAN)/control.d/* $(DEBIAN)/sub-flavours/*.vars)
	for i in $(control_files); do                                           \
	  cat $$i;                                                              \
	  echo "";                                                              \
	done | sed -e 's/PKGVER/$(release)/g'                                   \
	        -e 's/ABINUM/$(abinum)/g'                                       \
		-e 's/SRCPKGNAME/$(src_pkg_name)/g'                             \
		-e 's/=HUMAN=/$(human_arch)/g'                                  \
		-e 's/=SERIES=/$(series)/g'                                     \
	  > $(DEBIAN)/control.stub;
	flavours="$(sort $(wildcard $(DEBIAN)/control.d/vars.* $(DEBIAN)/sub-flavours/*.vars))";\
	for i in $$flavours; do							\
	  $(SHELL) $(DROOT)/scripts/control-create $$i "$(any_signed)" |	\
		sed -e 's/PKGVER/$(release)/g'                                  \
		-e 's/ABINUM/$(abinum)/g'                                       \
		-e 's/SRCPKGNAME/$(src_pkg_name)/g'                             \
		-e 's/=HUMAN=/$(human_arch)/g'                                  \
		-e 's/=SERIES=/$(series)/g'                                     \
		>> $(DEBIAN)/control.stub;                                      \
	done

.PHONY: debian/control
debian/control: $(DEBIAN)/control.stub
	cp $(DEBIAN)/control.stub debian/control

debian/canonical-certs.pem: $(wildcard $(DROOT)/certs/*-all.pem) $(wildcard $(DROOT)/certs/*-$(arch).pem) $(wildcard $(DEBIAN)/certs/*-all.pem) $(wildcard $(DEBIAN)/certs/*-$(arch).pem)
	for cert in $(sort $(notdir $^));					\
	do									\
		for dir in $(DEBIAN) $(DROOT);					\
		do								\
			if [ -f "$$dir/certs/$$cert" ]; then			\
				cat "$$dir/certs/$$cert";			\
				break;						\
			fi;							\
		done;								\
	done >"$@"

debian/canonical-revoked-certs.pem: $(wildcard $(DROOT)/revoked-certs/*-all.pem) $(wildcard $(DROOT)/revoked-certs/*-$(arch).pem) $(wildcard $(DEBIAN)/revoked-certs/*-all.pem) $(wildcard $(DEBIAN)/revoked-certs/*-$(arch).pem)
	for cert in $(sort $(notdir $^));					\
	do									\
		for dir in $(DEBIAN) $(DROOT);					\
		do								\
			if [ -f "$$dir/revoked-certs/$$cert" ]; then		\
				cat "$$dir/revoked-certs/$$cert";		\
				break;						\
			fi;							\
		done;								\
	done >"$@"
